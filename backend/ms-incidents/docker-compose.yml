version: "0.1"
services:
  # Servicio de PostgreSQL para la base de datos
  ms_incidents_db:
    container_name: ms_incidents_db
    environment:
      POSTGRES_DB: ms_incidents_db
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
    image: "postgres:latest"
    networks:
      - incidents_net
    ports:
      - "5432:5432"

  # Servicio de la API Flask
  ms_incidents_api:
    restart: always
    build:
      context: .
    container_name: ms_incidents_api
    environment:
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_HOST: ms_incidents_db
      DB_PORT: 5432
      DB_NAME: ms_incidents_db
    networks:
      - incidents_net
      - abcall_network
    ports:
      - "9876:9876"
    depends_on:
      - ms_incidents_db

  # Servicio de Kong como API Gateway
  # kong:
  #   image: kong:3.0
  #   container_name: kong
  #   environment:
  #     KONG_DATABASE: "off"  # Sin base de datos, configuraciones en modo declarativo
  #     KONG_DECLARATIVE_CONFIG: /kong/kong.yml  # Archivo de configuración declarativa
  #     KONG_PROXY_ACCESS_LOG: /dev/stdout
  #     KONG_ADMIN_ACCESS_LOG: /dev/stdout
  #     KONG_PROXY_ERROR_LOG: /dev/stderr
  #     KONG_ADMIN_ERROR_LOG: /dev/stderr
  #     KONG_ADMIN_LISTEN: "0.0.0.0:8001"
  #     KONG_PROXY_LISTEN: "0.0.0.0:8000"
  #   volumes:
  #     - ./kong.yml:/kong/kong.yml:ro  # Archivo de configuración para rutas de Kong
  #   networks:
  #     - incidents_net  # Red compartida con los otros servicios
  #   ports:
  #     - "8000:8000"  # Proxy (acceso público)
  #     - "8001:8001"  # Admin API (acceso interno)

networks:
  incidents_net:
    driver: bridge
  abcall_network:
    driver: bridge